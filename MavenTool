Maven Details:
https://docs.google.com/document/d/1OBpzKWYJFfLd3XIZw150NhX6p6cgYspH33nF6qaybLg/edit?usp=sharing

Setting Up Maven
1). Maven needs Java, So we need to setup Java first then followed by Maven
$ sudo yum -y install java-1.8.0 java-1.8.0-devel
$ java -version
openjdk version "1.8.0_212"
OpenJDK Runtime Environment (build 1.8.0_212-b04)
OpenJDK 64-Bit Server VM (build 25.212-b04, mixed mode)
$ javac -version
javac 1.8.0_212
$ sudo yum -y install maven
$ mvn --version
Apache Maven 3.0.5 (Red Hat 3.0.5-17)
Maven home: /usr/share/maven
Java version: 1.8.0_212, vendor: Oracle Corporation
Java home: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.212.b04-0.el7_6.x86_64/jre
Default locale: en_US, platform encoding: UTF-8
OS name: "linux", version: "3.10.0-957.21.3.el7.x86_64", arch: "amd64", family: "unix"

Choose a number or apply filter (format: [groupId:]artifactId, case sensitive contains): 1381:
Choose org.apache.maven.archetypes:maven-archetype-quickstart version:
Confirm properties configuration:
groupId: com.digi.proj1
artifactId: JavaApp
version: 1.0-SNAPSHOT
package: com.digi.proj1

$ cd JavaApp/
$ sudo yum -y install tree
$ tree
.
├── pom.xml
└── src
    ├── main
    │   └── java
    │       └── com
    │           └── digi
    │               └── proj1
    │                   └── App.java
    └── test
        └── java
            └── com
                └── digi
                    └── proj1
                        └── AppTest.java

$ mvn validate
$ mvn compile

$ tree
.
├── pom.xml
├── src
│   ├── main
│   │   └── java
│   │       └── com
│   │           └── digi
│   │               └── proj1
│   │                   └── App.java
│   └── test
│       └── java
│           └── com
│               └── digi
│                   └── proj1
│                       └── AppTest.java
└── target
    ├── classes
    │   └── com
    │       └── digi
    │           └── proj1
    │               └── App.class
    ├── generated-sources
    │   └── annotations
    └── maven-status
        └── maven-compiler-plugin
            └── compile
                └── default-compile
                    ├── createdFiles.lst
                    └── inputFiles.lst
                    
$ mvn test
$ tree
.
├── pom.xml
├── src
│   ├── main
│   │   └── java
│   │       └── com
│   │           └── digi
│   │               └── proj1
│   │                   └── App.java
│   └── test
│       └── java
│           └── com
│               └── digi
│                   └── proj1
│                       └── AppTest.java
└── target
    ├── classes
    │   └── com
    │       └── digi
    │           └── proj1
    │               └── App.class
    ├── generated-sources
    │   └── annotations
    ├── generated-test-sources
    │   └── test-annotations
    ├── maven-status
    │   └── maven-compiler-plugin
    │       ├── compile
    │       │   └── default-compile
    │       │       ├── createdFiles.lst
    │       │       └── inputFiles.lst
    │       └── testCompile
    │           └── default-testCompile
    │               ├── createdFiles.lst
    │               └── inputFiles.lst
    ├── surefire-reports
    │   ├── com.digi.proj1.AppTest.txt
    │   └── TEST-com.digi.proj1.AppTest.xml
    └── test-classes
        └── com
            └── digi
                └── proj1
                    └── AppTest.class


$ mvn package
$ tree
.
├── pom.xml
├── src
│   ├── main
│   │   └── java
│   │       └── com
│   │           └── digi
│   │               └── proj1
│   │                   └── App.java
│   └── test
│       └── java
│           └── com
│               └── digi
│                   └── proj1
│                       └── AppTest.java
└── target
    ├── classes
    │   └── com
    │       └── digi
    │           └── proj1
    │               └── App.class
    ├── generated-sources
    │   └── annotations
    ├── generated-test-sources
    │   └── test-annotations
    ├── JavaApp-1.0-SNAPSHOT.jar
    ├── maven-archiver
    │   └── pom.properties
    ├── maven-status
    │   └── maven-compiler-plugin
    │       ├── compile
    │       │   └── default-compile
    │       │       ├── createdFiles.lst
    │       │       └── inputFiles.lst
    │       └── testCompile
    │           └── default-testCompile
    │               ├── createdFiles.lst
    │               └── inputFiles.lst
    ├── surefire-reports
    │   ├── com.digi.proj1.AppTest.txt
    │   └── TEST-com.digi.proj1.AppTest.xml
    └── test-classes
        └── com
            └── digi
                └── proj1
                    └── AppTest.class
$ java -cp target/JavaApp-1.0-SNAPSHOT.jar com.digi.proj1.App
Hello World!

Setup Web Application
$ mvn archetype:generate | grep maven-archetype-webapp
1387: remote -> org.apache.maven.archetypes:maven-archetype-webapp (An archetype which contains a sample Maven Webapp project.)
$ mvn archetype:generate
Confirm properties configuration:
groupId: com.digi.proj2
artifactId: WebApp
version: 1.0-SNAPSHOT
package: com.digi.proj2

$ cd WebApp/

$ tree
.
├── pom.xml
└── src
    └── main
        └── webapp
            ├── index.jsp
            └── WEB-INF
                └── web.xml
$ mvn package

$ tree
.
├── pom.xml
├── src
│   └── main
│       └── webapp
│           ├── index.jsp
│           └── WEB-INF
│               └── web.xml
└── target
    ├── maven-archiver
    │   └── pom.properties
    ├── WebApp
    │   ├── index.jsp
    │   ├── META-INF
    │   └── WEB-INF
    │       ├── classes
    │       └── web.xml
    └── WebApp.war

Tomcat Installation

$ wget http://mirrors.estointernet.in/apache/tomcat/tomcat-7/v7.0.94/bin/apache-tomcat-7.0.94.tar.gz
$ tar xvf apache-tomcat-7.0.94.tar.gz
$ cd apache-tomcat-7.0.94/bin
$ ./startup.sh
Using CATALINA_BASE:   /home/rsa-key-20190610/apache-tomcat-7.0.94
Using CATALINA_HOME:   /home/rsa-key-20190610/apache-tomcat-7.0.94
Using CATALINA_TMPDIR: /home/rsa-key-20190610/apache-tomcat-7.0.94/temp
Using JRE_HOME:        /usr
Using CLASSPATH:       /home/rsa-key-20190610/apache-tomcat-7.0.94/bin/bootstrap.jar:/home/rsa-key-20190610/apache-tomcat-7.0.94/bin/tomcat-juli.jar
Tomcat started.
$ netstat -npl | grep 8080
(Not all processes could be identified, non-owned process info
 will not be shown, you would have to be root to see it all.)
tcp6       0      0 :::8080                 :::*                    LISTEN      4227/java
$ ps -ef | grep tomcat
rsa-key+  4227     1  1 16:02 pts/0    00:00:03 /usr/bin/java -Djava.util.logging.config.file=/home/rsa-key-20190610/apache-tomcat-7.0.94/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2048 -Dignore.endorsed.dirs= -classpath /home/rsa-key-20190610/apache-tomcat-7.0.94/bin/bootstrap.jar:/home/rsa-key-20190610/apache-tomcat-7.0.94/bin/tomcat-juli.jar -Dcatalina.base=/home/rsa-key-20190610/apache-tomcat-7.0.94 -Dcatalina.home=/home/rsa-key-20190610/apache-tomcat-7.0.94 -Djava.io.tmpdir=/home/rsa-key-20190610/apache-tomcat-7.0.94/temp org.apache.catalina.startup.Bootstrap start
rsa-key+  4346  3245  0 16:06 pts/0    00:00:00 grep --color=auto tomcat

Update the credentials in tomcat-users.xml
Browse the app manager on http://ip-add:8080
$ vim apache-tomcat-7.0.94/conf/tomcat-users.xml
  <user username="tomcat" password="tomcat" roles="manager-gui"/>
$ ./apache-tomcat-7.0.94/bin/shutdown.sh
$ ./apache-tomcat-7.0.94/bin/startup.sh
Browse the app manager on http://ip-add:8080


Deploy To Tomcat using Maven
Step1:
Update pom.xml, add the following content after </dependencies> between <build> & <plugins> tags
        <plugin>
          <groupId>org.apache.tomcat.maven</groupId>
          <artifactId>tomcat7-maven-plugin</artifactId>
          <version>2.2</version>
          <configuration>
          <url>http://localhost:8080/manager/text</url>
          <server>TomcatServer</server>
          <path>/WebApps</path>
          </configuration>
        </plugin>

Step2: Provide the script manager access, change tomcat-users.xml
$ vim ~/apache-tomcat-7.0.94/conf/tomcat-users.xml
  <user username="tomcat1" password="tomcat1" roles="manager-script"/>
Restart Tomcat:
$ ~/apache-tomcat-7.0.94/bin/shutdown.sh
$ ~/apache-tomcat-7.0.94/bin/startup.sh

Step3: We Need Tomcat - Maven Authentication
~]$ cd .m2/
.m2]$ touch settings.xml
.m2]$ vim settings.xml
<settings>
   <servers>
       <server>
           <id>TomcatServer</id>
           <username>tomcat1</username>
           <password>tomcat1</password>
       </server>
   </servers>
</settings>

To deploy the App use:

mvn tomcat7:deploy
mvn tomcat7:redeploy

